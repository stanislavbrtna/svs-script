function main {
	print("Garbage collection test: ");
	FAIL = 0;

	l = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec fringilla ullamcorper mi. Nunc eu sem facilisis lectus accumsan fermentum ut eu nulla. Donec erat ante, convallis ut lorem et, molestie dictum eros. Donec aliquam interdum erat et iaculis. In volutpat finibus lacus et feugiat. Duis euismod erat vitae erat accumsan dignissim.";

	#sys.profiler(1);
	for (x = 0; x < 1; x++;) {

		# set up generated test strings
		testtext1 = "test " + "text " + x + 1;
		b = "" + " ";
		testtext2 = "test " + "text " + x + 2;

		# generate some garbage in the middle
		for(i = 0; i < 30; i++;) {
			b = "i:"+(i*i);
		}
		
		b = "";
		
		for(i = 0; i < 30; i++;) {
			b = "i:"+(i*i);
			b = ""+"asAS";
			b = "";
		}

		testtext3 = "test " + "text " + x + 3;
		
		for(i = 0; i < 300; i++;) {
			b = 0;
			if (x < 25) {
				# to test unsafe commands in the expr exec
				b = b + testF() + getcp(l, i % len(l));
			} else {
				b = b + getcp(l, i % len(l));
				testF();
				b = "";
			}
		}
		
		testtext4 = "test " + "text  " + x + 4;
		testtext5 = "";

    testF();

 		# crush the strings to trigger collection
		for(i = 0; i < 300; i++;) {
			b = 0;
			if (x < 25) {
				# to test unsafe commands in the expr exec
				b = b + testF() + getcp(l, i % len(l));
			} else {
				b = b + getcp(l, i % len(l));
				testF();
				b = "";
			}
		}

		if (
			testtext1 != "test " + "text " + x + 1 or
			testtext2 != "test " + "text " + x + 2 or
			testtext3 != "test " + "text " + x + 3 or
			testtext4 != "test " + "text  " + x + 4 or
			testtext5 != "test " + "text " + x + 5
		) {
			FAIL = 1;
			print(testtext1);
			print(testtext2);
			print(testtext3);
			print(testtext4);
			print(testtext5);
			break;
		}
	}

	test2 = "this " + "is " + test2F() + "2";

	if (test2 != "this is test 2"){
		FAIL = 1;
	}
	
	a1 = random_str(2 + rnd()%50);
	a2 = random_str(2 + rnd()%50);
	a3 = random_str(2 + rnd()%50);
	
	test_args(a1, a2, a3);

	if(FAIL){
		print("FAILED!");
	}else{
		print("PASSED");
	}

	return FAIL;
}

function testF {
	testtext5 = "test " + "text " + x + 5;
	return "";
}

function test2F {
	i = 0;
	for(i = 0; i < 1000; i = i + 1;) {
		z = "testy test" + i;
	}
	return "test ";
}

function test_args {
  # strings are in the arguments...
  

	# we do some stuff to trigger the GC
	for(i = 0; i < 300; i++;) {
		b = 0;
		if (x < 25) {
			# to test unsafe commands in the expr exec
			b = b + testF() + getcp(l, i % len(l));
		} else {
			b = b + getcp(l, i % len(l));
			testF();
		}
	}
  
  if (arg0 != a1 or arg1 != a2 or arg2 != a3) {
    print("->Given:arg0: " + arg0 + " arg1: " + arg1 + " arg2: " + arg2);
    print("->Right:arg0: " + a1 + " arg1: " + a2 + " arg2: " + a3);
    FAIL = 1;
  }
}


function random_str {
  local new_str;
  local x;
  new_str = "";

  for(x = 0; x < arg0; x++;) {
    new_str = new_str + getcp("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMOPQRSTUVWXYZ0123456789_!@$%&*",
                    rnd() % len("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMOPQRSTUVWXYZ0123456789_!@$%&*"));
  }

  return new_str;
}
